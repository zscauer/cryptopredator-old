# metrics configured by this article:
# https://refactorfirst.com/spring-boot-prometheus-grafana

services:

  redis:
    image: redis:7.0.7-alpine
    container_name: redis_binancespotbot
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 6399:6379
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./data/redis:/data

  postgres:
    image: postgres:15.1
    container_name: postgres_binancespotbot
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file:
      - binancespotbot_env.env
    ports:
      - 5434:5432
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

# https://habr.com/ru/post/578744/
#  postgres_exporter:
#    container_name: postgres_exporter
#    extra_hosts:
#      - "host.docker.internal:host-gateway"
#    image: prometheuscommunity/postgres-exporter
#    env_file:
#      - binancespotbot_env.env
#    volumes:
#      - .metrics/postgres_exporter_queries.yaml:/etc/postgres_exporter/queries.yaml:ro
#    ports:
#      - "9181:9187"

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file:
      - binancespotbot_env.env
    ports:
      - 5050:80

  binancespotbot:
    image: binancespotbot
    container_name: binancespotbot
    env_file:
      - binancespotbot_env.env
    ports:
      - 85:8080
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./metrics/logs:/tmp/logs

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 9096:9090
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./metrics/prometheus.yaml:/etc/prometheus.yaml
    command: [
      "--config.file=/etc/prometheus.yaml" 
      # "--enable-feature=exemplar-storage",
      # "--storage.tsdb.path=/prometheus",
      # "--web.console.libraries=/usr/share/prometheus/console_libraries",
      # "--web.console.templates=/usr/share/prometheus/consoles",
      # "--web.enable-remote-write-receiver"
    ]

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 3003:3000
    user: ':' # it needs to avoid error of permissions for volumes
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./metrics/grafana:/var/lib/grafana
      - ./metrics/grafana-dashboards:/etc/grafana/provisioning/dashboards
      - ./metrics/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_DOMAIN=localhost