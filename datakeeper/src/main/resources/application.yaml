logging:
  level:
    root: ${LOGGING_LEVEL_ROOT}
    web: ${LOGGING_LEVEL_WEB}
  pattern:
    console: "%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
    file: "%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}" # "%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg %n"
  file:
    path: /tmp/logs
  logback:
    rollingpolicy:
      file-name-pattern: "${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz"
      max-history: 30

server:
  tomcat:
    accesslog:
      enabled: true
      rotate: false
      suffix: ".log"
      prefix: "access_log"
      directory: "/tmp/logs"
      pattern: "common"

spring:
  main:
    banner-mode: off
  profiles:
    active: "default"
  output:
    ansi:
      enabled: ALWAYS
  # mvc:
  #     pathmatch:
  #         matching-strategy: ant-path-matcher
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    driver-class-name: org.postgresql.Driver
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
#  jpa:
#    database-platform: org.hibernate.dialect.PostgreSQLDialect
#    url: jdbc:postgresql://host.docker.internal:5432/binance
#    driver-class-name: org.postgresql.Driver
#    username: postgres
#    password: postgres
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include:
          - prometheus
          - health
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true

redis:
  host: ${REDIS_HOST}
  port: ${REDIS_PORT}
  password: ${REDIS_PASSWORD}